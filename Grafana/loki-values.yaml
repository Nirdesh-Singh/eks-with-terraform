loki:
  auth_enabled: false  # Disable Loki authentication

  commonConfig:
    replication_factor: 1  # ✅ Single replica mode

  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h

  storage_config:
    aws:
      endpoint: http://loki-minio.grafana.svc.cluster.local:9000  # MinIO Service in grafana namespace
      region: ap-south-1
      bucketnames: loki-chunks
      s3forcepathstyle: true  # Required for MinIO compatibility
      

  ingester:
    chunk_encoding: snappy

  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h  # 28 days retention

  compactor:
    retention_enabled: true
    delete_request_store: s3

  ruler:
    enable_api: true
    storage:
      type: s3
      s3:
        endpoint: http://loki-minio.grafana.svc.cluster.local:9000
        region: ap-south-1
        bucketnames: loki-ruler
        s3forcepathstyle: true
        
    alertmanager_url: ""

  querier:
    max_concurrent: 1

  storage:
    type: s3
    bucketNames:
      chunks: "loki-chunks"
      ruler: "loki-ruler"
    s3:
      endpoint: http://loki-minio.grafana.svc.cluster.local:9000
      region: ap-south-1
      s3forcepathstyle: true
      

serviceAccount:
  create: true
  name: loki-sa

deploymentMode: Distributed  # Using SimpleScalable mode

ingester:
  replicas: 1  # Lightweight for Docker Desktop
  persistence:
    enabled: true
    storageClass: gp2
    accessModes:
      - ReadWriteOnce
    size: 2Gi

querier:
  replicas: 1
  persistence:
    enabled: true
    storageClass: gp2
    accessModes:
      - ReadWriteOnce
    size: 2Gi

queryFrontend:
  replicas: 1

queryScheduler:
  replicas: 1

distributor:
  replicas: 1

compactor:
  replicas: 1
  persistence:
    enabled: true
    storageClass: gp2
    accessModes:
      - ReadWriteOnce
    size: 2Gi

indexGateway:
  replicas: 1
  persistence:
    enabled: true
    storageClass: gp2
    accessModes:
      - ReadWriteOnce
    size: 2Gi

ruler:
  replicas: 1
  persistence:
    enabled: true
    storageClass: gp2
    accessModes:
      - ReadWriteOnce
    size: 2Gi

# Expose Loki externally on Docker Desktop
gateway:
  service:
    type: LoadBalancer  # Allows external access to Loki API
  basicAuth:
    enabled: false  # No authentication

# ✅ Enable Loki Canary for Helm grafana
lokiCanary:
  enabled: true
  extraArgs:
    - -pass=$(LOKI_PASS)
    - -user=$(LOKI_USER)
  extraEnv:
    - name: LOKI_PASS
      value: password
    - name: LOKI_USER
      value: admin

# Disable MinIO as it's already external
minio:
  enabled: true
  buckets:
    - name: loki-chunks
      policy: none
    - name: loki-ruler
      policy: none

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0